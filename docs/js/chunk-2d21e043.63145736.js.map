{"version":3,"sources":["webpack:///./src/views/WFormCreator/index.vue","webpack:///./src/views/WFormCreator/doc.md?19dc","webpack:///src/views/WFormCreator/doc.md","webpack:///./src/views/WFormCreator/doc.md?ed1c","webpack:///./src/views/WFormCreator/doc.md","webpack:///src/views/WFormCreator/index.vue","webpack:///./src/views/WFormCreator/index.vue?1bdd","webpack:///./src/views/WFormCreator/index.vue?c14d"],"names":["render","_vm","this","_c","_self","ref","attrs","options","scopedSlots","_u","key","fn","row","formData","on","$event","handleClick1","_v","handleClick2","getFormQuery","getFormQueryOrError","setFormQuery","staticClass","staticRenderFns","_m","domProps","_s","components","mixins","component","name","doc","data","fnSearch","formAttrs","rules","required","message","trigger","birthday","type","formItemAttrs","label","placeholder","width","caicai","filter","sex","multiple","selectOpts","value","onChange","like","queryAsync","skill","number","remark","rows","something","slot","methods","asyncGetOpts","setTimeout","cb","remoteSelect","resolve","console","warn","handleSelectChange"],"mappings":"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","file":"js/chunk-2d21e043.63145736.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('WFormCreator',{ref:\"refWFormCreator\",attrs:{\"options\":_vm.options},scopedSlots:_vm._u([{key:\"something\",fn:function({ row, formData }){return [_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.handleClick1(row)}}},[_vm._v(\"通过插槽获取当前form-item配置\")]),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.handleClick2(formData)}}},[_vm._v(\"通过插槽获取表单数据\")])]}}])}),_c('div',[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.getFormQuery}},[_vm._v(\"获取表单数据\")]),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.getFormQueryOrError}},[_vm._v(\"获取表单数据,校验不过返回错误\")]),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.setFormQuery}},[_vm._v(\"设置表单数据\")])],1),_c('div',{staticClass:\"mt-20px\"},[_c('doc')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"v-docs\"},[_c('div',{staticClass:\"markdown-body\"},[_c('h4',[_vm._v(\"使用\")]),_vm._m(0),_vm._m(1),_vm._m(2),_c('pre',{staticClass:\"hljs language language-javascript\",attrs:{\"data-lang\":\"javascript\"}},[_c('code',{domProps:{\"innerHTML\":_vm._s('&lt;template&gt;\\n  &lt;div&gt;\\n    &lt;WFormCreator ref=\"refWFormCreator\" :options=\"options\"&gt;\\n      &lt;template #something=\"{ row, formData }\"&gt;\\n        &lt;el-button type=\"success\" @click=\"handleClick1(row)\"\\n          &gt;通过插槽获取当前form-item配置&lt;/el-button\\n        &gt;\\n        &lt;el-button type=\"success\" @click=\"handleClick2(formData)\"\\n          &gt;通过插槽获取表单数据&lt;/el-button\\n        &gt;\\n      &lt;/template&gt;\\n    &lt;/WFormCreator&gt;\\n    &lt;div&gt;\\n      &lt;el-button type=\"success\" @click=\"getFormQuery\"&gt;获取表单数据&lt;/el-button&gt;\\n      &lt;el-button type=\"success\" @click=\"getFormQueryOrError\"\\n        &gt;获取表单数据,校验不过返回错误&lt;/el-button\\n      &gt;\\n      &lt;el-button type=\"success\" @click=\"setFormQuery\"&gt;设置表单数据&lt;/el-button&gt;\\n    &lt;/div&gt;\\n    &lt;div class=\"mt-20px\"&gt;&lt;doc&gt;&lt;/doc&gt;&lt;/div&gt;\\n  &lt;/div&gt;\\n&lt;/template&gt;\\n\\n&lt;script&gt;\\nimport doc from \\'./doc.md\\'\\nexport default {\\n  name: \\'WFormCreatorView\\',\\n  components: { doc },\\n  data() {\\n    return {\\n      options: {\\n        fnSearch: this.fnSearch,\\n        formAttrs: {\\n          rules: {\\n            name: [\\n              { required: true, message: \\'请输入活动名称\\', trigger: \\'blur\\' }\\n            ],\\n            birthday: [\\n              {\\n                type: \\'array\\',\\n                required: true,\\n                message: \\'请选择时间\\',\\n                trigger: \\'change\\'\\n              }\\n            ]\\n          }\\n        },\\n        formItemAttrs: {\\n          name: {\\n            type: \\'input\\',\\n            label: \\'名字\\',\\n            placeholder: \\'输入名字\\',\\n            width: \\'320px\\', // 不传则默认180px\\n            caicai: \\'菜菜\\' // 初始化的默认值\\n            filter: value =&gt; { // 修改输入的值，返回的就是最后的value\\n              return value\\n            }\\n          },\\n          sex: {\\n            type: \\'select\\',\\n            label: \\'性别\\',\\n            multiple: true,\\n            selectOpts: [\\n              { label: \\'全部\\', value: \\'\\' },\\n              { label: \\'男\\', value: \\'male\\' },\\n              { label: \\'女\\', value: \\'female\\' }\\n            ],\\n            placeholder: \\'选择性别\\',\\n            width: \\'320px\\', // 不传则默认180px\\n            caicai: [\\'male\\', \\'female\\'], // 初始化的默认值，多选必须传入数组\\n            onChange: this.handleSelectChange\\n          },\\n          birthday: {\\n            type: \\'daterange\\',\\n            label: \\'出生日期\\',\\n            caicai: [\\'2022-07-01 00:00:00\\', \\'2022-07-01 00:00:00\\'] // 初始化的默认值，时间范围必须传入数组\\n          },\\n          like: {\\n            type: \\'autoComplete\\',\\n            label: \\'爱好\\',\\n            queryAsync: this.asyncGetOpts,\\n            placeholder: \\'输入关键字\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          skill: {\\n            type: \\'remoteSelect\\',\\n            label: \\'技能\\',\\n            queryAsync: this.remoteSelect,\\n            placeholder: \\'输入关键字\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          number: {\\n            type: \\'inputNumber\\',\\n            label: \\'脚指个数\\',\\n            placeholder: \\'输入脚指个数\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          remark: {\\n            type: \\'textarea\\',\\n            label: \\'备注\\',\\n            placeholder: \\'输入备注\\',\\n            rows: 5,\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          something: {\\n            label: \\'插槽\\',\\n            slot: \\'something\\'\\n          }\\n        }\\n      }\\n    }\\n  },\\n  methods: {\\n    asyncGetOpts(key, cb) {\\n      setTimeout(() =&gt; {\\n        let arr = [{ value: \\'麻将\\' }, { value: \\'斗地主\\' }, { value: \\'下棋\\' }]\\n        cb(arr)\\n      }, 500)\\n    },\\n    remoteSelect() {\\n      return new Promise(resolve =&gt; {\\n        setTimeout(() =&gt; {\\n          resolve([\\n            { label: \\'麻将\\', value: \\'mj\\' },\\n            { label: \\'斗地主\\', value: \\'ddz\\' },\\n            { label: \\'下棋\\', value: \\'xq\\' }\\n          ])\\n        }, 1000)\\n      })\\n    },\\n    fnSearch(query) {\\n      console.warn(\\'点击查询\\', query)\\n    },\\n    // 如果options.formAttrs中包含rules，则会对表单进行校验\\n    getFormQuery() {\\n      console.warn(\\'点击获取表单数据\\', this.$refs.refWFormCreator.getFormData())\\n    },\\n    async getFormQueryOrError() {\\n      console.warn(\\n        \\'获取表单字段数据，如果校验不过则返回错误\\',\\n        await this.$refs.refWFormCreator.getFormDataOrError()\\n      )\\n    },\\n    setFormQuery() {\\n      this.$refs.refWFormCreator.setFormData({\\n        birthday: [\\'2022-05-04 00:00:00\\', \\'2022-05-11 23:59:59\\']\\n      })\\n    },\\n    handleClick1(row) {\\n      console.warn(\\'通过插槽获取当前form-item配置\\', row)\\n    },\\n    handleClick2(formData) {\\n      console.warn(\\'通过插槽获取表单数据\\', formData)\\n    },\\n    handleSelectChange(value) {\\n      console.warn(\\'select选中值发生变化时触发\\', value)\\n    }\\n  }\\n}\\n&lt;/script&gt;\\n\\n')}})])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"参数名\")]),_c('th',[_vm._v(\"作用\")]),_c('th',[_vm._v(\"默认值\")]),_c('th',[_vm._v(\"是否必须\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"options\")]),_c('td',[_vm._v(\"配置项（见下方例子）\")]),_c('td'),_c('td',[_vm._v(\"yes\")])]),_c('tr',[_c('td',[_vm._v(\"fnSearch\")]),_c('td',[_vm._v(\"查询函数\")]),_c('td'),_c('td',[_vm._v(\"no\")])]),_c('tr',[_c('td',[_vm._v(\"formAttrs\")]),_c('td',[_vm._v(\"与 el-form 的 Form Attributes 一样。 \"),_c('br'),_vm._v(\"新增属性 caicai、filter，使用见下方例子\")]),_c('td'),_c('td',[_vm._v(\"no\")])]),_c('tr',[_c('td',[_vm._v(\"formItemAttrs\")]),_c('td',[_vm._v(\"见下方例子\")]),_c('td'),_c('td',[_vm._v(\"no\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"slot 插槽\")]),_c('th',[_vm._v(\"作用\")]),_c('th',[_vm._v(\"默认值\")]),_c('th',[_vm._v(\"是否必须\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"after\")]),_c('td',[_vm._v(\"替换重置、查询按钮\")]),_c('td'),_c('td',[_vm._v(\"no\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',[_c('a',{attrs:{\"href\":\"https://element.eleme.cn/#/zh-CN/component/form\"}},[_vm._v(\"https://element.eleme.cn/#/zh-CN/component/form\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n<!-- eslint-disable -->\n<div class=\"v-docs\">\n<div class=\"markdown-body\"><h4>使用</h4>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>作用</th>\n<th>默认值</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>options</td>\n<td>配置项（见下方例子）</td>\n<td></td>\n<td>yes</td>\n</tr>\n<tr>\n<td>fnSearch</td>\n<td>查询函数</td>\n<td></td>\n<td>no</td>\n</tr>\n<tr>\n<td>formAttrs</td>\n<td>与 el-form 的 Form Attributes 一样。 <br />新增属性 caicai、filter，使用见下方例子</td>\n<td></td>\n<td>no</td>\n</tr>\n<tr>\n<td>formItemAttrs</td>\n<td>见下方例子</td>\n<td></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>slot 插槽</th>\n<th>作用</th>\n<th>默认值</th>\n<th>是否必须</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>after</td>\n<td>替换重置、查询按钮</td>\n<td></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://element.eleme.cn/#/zh-CN/component/form\">https://element.eleme.cn/#/zh-CN/component/form</a></p>\n<pre class=\"hljs language language-javascript\" data-lang=\"javascript\"><code v-html=\"'&amp;lt;template&amp;gt;\\n  &amp;lt;div&amp;gt;\\n    &amp;lt;WFormCreator ref=&quot;refWFormCreator&quot; :options=&quot;options&quot;&amp;gt;\\n      &amp;lt;template #something=&quot;{ row, formData }&quot;&amp;gt;\\n        &amp;lt;el-button type=&quot;success&quot; @click=&quot;handleClick1(row)&quot;\\n          &amp;gt;通过插槽获取当前form-item配置&amp;lt;/el-button\\n        &amp;gt;\\n        &amp;lt;el-button type=&quot;success&quot; @click=&quot;handleClick2(formData)&quot;\\n          &amp;gt;通过插槽获取表单数据&amp;lt;/el-button\\n        &amp;gt;\\n      &amp;lt;/template&amp;gt;\\n    &amp;lt;/WFormCreator&amp;gt;\\n    &amp;lt;div&amp;gt;\\n      &amp;lt;el-button type=&quot;success&quot; @click=&quot;getFormQuery&quot;&amp;gt;获取表单数据&amp;lt;/el-button&amp;gt;\\n      &amp;lt;el-button type=&quot;success&quot; @click=&quot;getFormQueryOrError&quot;\\n        &amp;gt;获取表单数据,校验不过返回错误&amp;lt;/el-button\\n      &amp;gt;\\n      &amp;lt;el-button type=&quot;success&quot; @click=&quot;setFormQuery&quot;&amp;gt;设置表单数据&amp;lt;/el-button&amp;gt;\\n    &amp;lt;/div&amp;gt;\\n    &amp;lt;div class=&quot;mt-20px&quot;&amp;gt;&amp;lt;doc&amp;gt;&amp;lt;/doc&amp;gt;&amp;lt;/div&amp;gt;\\n  &amp;lt;/div&amp;gt;\\n&amp;lt;/template&amp;gt;\\n\\n&amp;lt;script&amp;gt;\\nimport doc from \\'./doc.md\\'\\nexport default {\\n  name: \\'WFormCreatorView\\',\\n  components: { doc },\\n  data() {\\n    return {\\n      options: {\\n        fnSearch: this.fnSearch,\\n        formAttrs: {\\n          rules: {\\n            name: [\\n              { required: true, message: \\'请输入活动名称\\', trigger: \\'blur\\' }\\n            ],\\n            birthday: [\\n              {\\n                type: \\'array\\',\\n                required: true,\\n                message: \\'请选择时间\\',\\n                trigger: \\'change\\'\\n              }\\n            ]\\n          }\\n        },\\n        formItemAttrs: {\\n          name: {\\n            type: \\'input\\',\\n            label: \\'名字\\',\\n            placeholder: \\'输入名字\\',\\n            width: \\'320px\\', // 不传则默认180px\\n            caicai: \\'菜菜\\' // 初始化的默认值\\n            filter: value =&amp;gt; { // 修改输入的值，返回的就是最后的value\\n              return value\\n            }\\n          },\\n          sex: {\\n            type: \\'select\\',\\n            label: \\'性别\\',\\n            multiple: true,\\n            selectOpts: [\\n              { label: \\'全部\\', value: \\'\\' },\\n              { label: \\'男\\', value: \\'male\\' },\\n              { label: \\'女\\', value: \\'female\\' }\\n            ],\\n            placeholder: \\'选择性别\\',\\n            width: \\'320px\\', // 不传则默认180px\\n            caicai: [\\'male\\', \\'female\\'], // 初始化的默认值，多选必须传入数组\\n            onChange: this.handleSelectChange\\n          },\\n          birthday: {\\n            type: \\'daterange\\',\\n            label: \\'出生日期\\',\\n            caicai: [\\'2022-07-01 00:00:00\\', \\'2022-07-01 00:00:00\\'] // 初始化的默认值，时间范围必须传入数组\\n          },\\n          like: {\\n            type: \\'autoComplete\\',\\n            label: \\'爱好\\',\\n            queryAsync: this.asyncGetOpts,\\n            placeholder: \\'输入关键字\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          skill: {\\n            type: \\'remoteSelect\\',\\n            label: \\'技能\\',\\n            queryAsync: this.remoteSelect,\\n            placeholder: \\'输入关键字\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          number: {\\n            type: \\'inputNumber\\',\\n            label: \\'脚指个数\\',\\n            placeholder: \\'输入脚指个数\\',\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          remark: {\\n            type: \\'textarea\\',\\n            label: \\'备注\\',\\n            placeholder: \\'输入备注\\',\\n            rows: 5,\\n            width: \\'320px\\' // 不传则默认180px\\n          },\\n          something: {\\n            label: \\'插槽\\',\\n            slot: \\'something\\'\\n          }\\n        }\\n      }\\n    }\\n  },\\n  methods: {\\n    asyncGetOpts(key, cb) {\\n      setTimeout(() =&amp;gt; {\\n        let arr = [{ value: \\'麻将\\' }, { value: \\'斗地主\\' }, { value: \\'下棋\\' }]\\n        cb(arr)\\n      }, 500)\\n    },\\n    remoteSelect() {\\n      return new Promise(resolve =&amp;gt; {\\n        setTimeout(() =&amp;gt; {\\n          resolve([\\n            { label: \\'麻将\\', value: \\'mj\\' },\\n            { label: \\'斗地主\\', value: \\'ddz\\' },\\n            { label: \\'下棋\\', value: \\'xq\\' }\\n          ])\\n        }, 1000)\\n      })\\n    },\\n    fnSearch(query) {\\n      console.warn(\\'点击查询\\', query)\\n    },\\n    // 如果options.formAttrs中包含rules，则会对表单进行校验\\n    getFormQuery() {\\n      console.warn(\\'点击获取表单数据\\', this.$refs.refWFormCreator.getFormData())\\n    },\\n    async getFormQueryOrError() {\\n      console.warn(\\n        \\'获取表单字段数据，如果校验不过则返回错误\\',\\n        await this.$refs.refWFormCreator.getFormDataOrError()\\n      )\\n    },\\n    setFormQuery() {\\n      this.$refs.refWFormCreator.setFormData({\\n        birthday: [\\'2022-05-04 00:00:00\\', \\'2022-05-11 23:59:59\\']\\n      })\\n    },\\n    handleClick1(row) {\\n      console.warn(\\'通过插槽获取当前form-item配置\\', row)\\n    },\\n    handleClick2(formData) {\\n      console.warn(\\'通过插槽获取表单数据\\', formData)\\n    },\\n    handleSelectChange(value) {\\n      console.warn(\\'select选中值发生变化时触发\\', value)\\n    }\\n  }\\n}\\n&amp;lt;/script&amp;gt;\\n\\n'\"></code></pre>\n</div>\n</div>\n</template>\n\n    <script>\n      /** eslint-disable **/\n      \n\n      \n      \n      export default {\n        components: {\n          \n        },\n        mixins: [\n          \n        ]\n      }\n    </script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??ref--15-0!../../../node_modules/vue-dotmd-loader/lib/index.js??ref--15-1!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!../../../node_modules/eslint-loader/index.js??ref--14-0!./doc.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??ref--15-0!../../../node_modules/vue-dotmd-loader/lib/index.js??ref--15-1!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!../../../node_modules/eslint-loader/index.js??ref--14-0!./doc.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./doc.md?vue&type=template&id=613e5ab6&\"\nimport script from \"./doc.md?vue&type=script&lang=js&\"\nexport * from \"./doc.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <WFormCreator ref=\"refWFormCreator\" :options=\"options\">\n      <template #something=\"{ row, formData }\">\n        <el-button type=\"success\" @click=\"handleClick1(row)\"\n          >通过插槽获取当前form-item配置</el-button\n        >\n        <el-button type=\"success\" @click=\"handleClick2(formData)\"\n          >通过插槽获取表单数据</el-button\n        >\n      </template>\n    </WFormCreator>\n    <div>\n      <el-button type=\"success\" @click=\"getFormQuery\">获取表单数据</el-button>\n      <el-button type=\"success\" @click=\"getFormQueryOrError\"\n        >获取表单数据,校验不过返回错误</el-button\n      >\n      <el-button type=\"success\" @click=\"setFormQuery\">设置表单数据</el-button>\n    </div>\n    <div class=\"mt-20px\"><doc></doc></div>\n  </div>\n</template>\n\n<script>\nimport doc from './doc.md'\nexport default {\n  name: 'WFormCreatorView',\n  components: { doc },\n  data() {\n    return {\n      options: {\n        fnSearch: this.fnSearch,\n        formAttrs: {\n          rules: {\n            name: [\n              { required: true, message: '请输入活动名称', trigger: 'blur' }\n            ],\n            birthday: [\n              {\n                type: 'array',\n                required: true,\n                message: '请选择时间',\n                trigger: 'change'\n              }\n            ]\n          }\n        },\n        formItemAttrs: {\n          name: {\n            type: 'input',\n            label: '名字',\n            placeholder: '输入名字',\n            width: '320px', // 不传则默认180px\n            caicai: '菜菜',\n            filter: value => {\n              return value\n            }\n          },\n          sex: {\n            type: 'select',\n            label: '性别',\n            multiple: true,\n            selectOpts: [\n              { label: '全部', value: '' },\n              { label: '男', value: 'male' },\n              { label: '女', value: 'female' }\n            ],\n            placeholder: '选择性别',\n            width: '320px', // 不传则默认180px\n            caicai: ['male', 'female'],\n            onChange: this.handleSelectChange\n          },\n          birthday: {\n            type: 'daterange',\n            label: '出生日期',\n            caicai: ['2022-07-01 00:00:00', '2022-07-01 00:00:00']\n          },\n          like: {\n            type: 'autoComplete',\n            label: '爱好',\n            queryAsync: this.asyncGetOpts,\n            placeholder: '输入关键字',\n            width: '320px' // 不传则默认180px\n          },\n          skill: {\n            type: 'remoteSelect',\n            label: '技能',\n            queryAsync: this.remoteSelect,\n            placeholder: '输入关键字',\n            width: '320px' // 不传则默认180px\n          },\n          number: {\n            type: 'inputNumber',\n            label: '脚指个数',\n            placeholder: '输入脚指个数',\n            width: '320px' // 不传则默认180px\n          },\n          remark: {\n            type: 'textarea',\n            label: '备注',\n            placeholder: '输入备注',\n            rows: 5,\n            width: '320px' // 不传则默认180px\n          },\n          something: {\n            label: '插槽',\n            slot: 'something'\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    asyncGetOpts(key, cb) {\n      setTimeout(() => {\n        let arr = [{ value: '麻将' }, { value: '斗地主' }, { value: '下棋' }]\n        cb(arr)\n      }, 500)\n    },\n    remoteSelect() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve([\n            { label: '麻将', value: 'mj' },\n            { label: '斗地主', value: 'ddz' },\n            { label: '下棋', value: 'xq' }\n          ])\n        }, 1000)\n      })\n    },\n    fnSearch(query) {\n      console.warn('点击查询', query)\n    },\n    // 如果options.formAttrs中包含rules，则会对表单进行校验\n    getFormQuery() {\n      console.warn('点击获取表单数据', this.$refs.refWFormCreator.getFormData())\n    },\n    async getFormQueryOrError() {\n      console.warn(\n        '获取表单字段数据，如果校验不过则返回错误',\n        await this.$refs.refWFormCreator.getFormDataOrError()\n      )\n    },\n    setFormQuery() {\n      this.$refs.refWFormCreator.setFormData({\n        birthday: ['2022-05-04 00:00:00', '2022-05-11 23:59:59']\n      })\n    },\n    handleClick1(row) {\n      console.warn('通过插槽获取当前form-item配置', row)\n    },\n    handleClick2(formData) {\n      console.warn('通过插槽获取表单数据', formData)\n    },\n    handleSelectChange(value) {\n      console.warn('select选中值发生变化时触发', value)\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/windicss-webpack-plugin/dist/loaders/windicss-template.cjs!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=30e56d23&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}